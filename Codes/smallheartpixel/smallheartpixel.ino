#include <MCUFRIEND_kbv.h> // Include the MCUFRIEND_kbv Library

// Pin definitions for TFT display
#define LCD_CS A3
#define LCD_CD A2
#define LCD_WR A1
#define LCD_RD A0
#define LCD_RST A4

// Initialize the TFT display
MCUFRIEND_kbv tft;

// Image dimensions
#define IMAGE_WIDTH 16
#define IMAGE_HEIGHT 16

// Image pixel data
const uint16_t image_data[IMAGE_WIDTH * IMAGE_HEIGHT] = {
  // Insert your pixel values here
  // Format: 0xRRGGBB
 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xef7b, 0xef7b, 0xef7b, 0xef7b, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7b, 0xef7b, 0xef7b, 0xef7b, 0xffff, 0xffff, 
  0xffff, 0xe6f7, 0x0801, 0x0801, 0x0801, 0x0801, 0xef7b, 0xffff, 0xffff, 0xce73, 0x0801, 0x0801, 0x0801, 0x0801, 0xef7b, 0xffff, 
  0xef7b, 0x1801, 0xe043, 0xe001, 0xe001, 0xe001, 0x1001, 0xffff, 0xe739, 0x3001, 0xe001, 0xe001, 0xe001, 0xe801, 0x2085, 0xffff, 
  0x1843, 0xe085, 0xffbd, 0xff7b, 0xe043, 0xe001, 0xd801, 0x0843, 0x2843, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xd001, 0x294b, 
  0x1001, 0xe885, 0xff39, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xd801, 0x2109, 
  0x1001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xd801, 0x2109, 
  0x1001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xd801, 0x2109, 
  0xf7bd, 0x30c7, 0xd001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xd001, 0x318d, 0xffff, 
  0xffff, 0xf7bd, 0x314b, 0xc001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xc001, 0x314b, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xf7bd, 0x2909, 0xc001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xe001, 0xc001, 0x2109, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0x1085, 0xd001, 0xe001, 0xe001, 0xe001, 0xe001, 0xc001, 0x18c7, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x1885, 0xe001, 0xe001, 0xe001, 0xc001, 0x294b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x398d, 0xc801, 0xb801, 0x5295, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4211, 0x5ad7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

void setup() {
  // Initialize the TFT display
  tft.begin(0x9341); // Pass the display controller ID

  // Set the rotation of the display (optional)
  tft.setRotation(1);

  // Set the background color
  tft.fillScreen(0x0000); // Black
}

void loop() {
  // Display the image on the TFT display
  //tft.setAddrWindow(0, 0, IMAGE_WIDTH - 1, IMAGE_HEIGHT - 1); // Set the display window
  //tft.pushColors(image_data, IMAGE_WIDTH * IMAGE_HEIGHT);    // Push the image data to the display
   tft.setAddrWindow(0, 0, IMAGE_WIDTH - 1, IMAGE_HEIGHT - 1); // Set the display window
   tft.pushColors((uint16_t*)image_data, IMAGE_WIDTH * IMAGE_HEIGHT, true); // Push the image data to the display


  delay(5000); // Delay for 5 seconds
  tft.fillScreen(0x0000); // Clear the screen
  delay(2000); // Delay for 2 seconds
}